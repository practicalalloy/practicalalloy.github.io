<!doctype html>
<html class="no-js" lang="en" data-content_root="../../../../">
  <head><meta charset="utf-8"/>
    <meta name="viewport" content="width=device-width,initial-scale=1"/>
    <meta name="color-scheme" content="light dark"><meta name="viewport" content="width=device-width, initial-scale=1" />

    <meta property="article:modified_time" content="2024-06-17T17:59:35+01:00" /><link rel="index" title="Index" href="../../../../genindex.html" /><link rel="search" title="Search" href="../../../../search.html" /><link rel="next" title="Sequences" href="../sequences/index.html" /><link rel="prev" title="Safety, liveness, and fairness" href="../fairness/index.html" />

    <!-- Generated with Sphinx 8.1.3 and Furo 2024.08.06 -->
        <title>Inductive invariants - Practical Alloy</title>
      <link rel="stylesheet" type="text/css" href="../../../../_static/pygments.css?v=8f2a1f02" />
    <link rel="stylesheet" type="text/css" href="../../../../_static/styles/furo.css?v=354aac6f" />
    <link rel="stylesheet" type="text/css" href="../../../../_static/copybutton.css?v=76b2166b" />
    <link rel="stylesheet" type="text/css" href="../../../../_static/sphinx-design.min.css?v=95c83b7e" />
    <link rel="stylesheet" type="text/css" href="../../../../_static/styles/furo-extensions.css?v=302659d7" />
    <link rel="stylesheet" type="text/css" href="../../../../_static/practicalalloy.css?v=2ee171b3" />
    <link crossorigin="anonymous" integrity="sha384-DyZ88mC6Up2uqS4h/KRgHuoeGwBcD4Ng9SiP4dIRy0EXTlnuz47vAwmeGwVChigm" rel="stylesheet" type="text/css" href="https://use.fontawesome.com/releases/v5.15.4/css/all.css" />
    
    


<style>
  body {
    --color-code-background: #f8f8f8;
  --color-code-foreground: black;
  --color-brand-primary: #2a5adf;
  --color-brand-content: #2a5adf;
  
  }
  @media not print {
    body[data-theme="dark"] {
      --color-code-background: #202020;
  --color-code-foreground: #d0d0d0;
  
    }
    @media (prefers-color-scheme: dark) {
      body:not([data-theme="light"]) {
        --color-code-background: #202020;
  --color-code-foreground: #d0d0d0;
  
      }
    }
  }
</style></head>
  <body>
    
    <script>
      document.body.dataset.theme = localStorage.getItem("theme") || "auto";
    </script>
    

<svg xmlns="http://www.w3.org/2000/svg" style="display: none;">
  <symbol id="svg-toc" viewBox="0 0 24 24">
    <title>Contents</title>
    <svg stroke="currentColor" fill="currentColor" stroke-width="0" viewBox="0 0 1024 1024">
      <path d="M408 442h480c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8H408c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8zm-8 204c0 4.4 3.6 8 8 8h480c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8H408c-4.4 0-8 3.6-8 8v56zm504-486H120c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h784c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm0 632H120c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h784c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zM115.4 518.9L271.7 642c5.8 4.6 14.4.5 14.4-6.9V388.9c0-7.4-8.5-11.5-14.4-6.9L115.4 505.1a8.74 8.74 0 0 0 0 13.8z"/>
    </svg>
  </symbol>
  <symbol id="svg-menu" viewBox="0 0 24 24">
    <title>Menu</title>
    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor"
      stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather-menu">
      <line x1="3" y1="12" x2="21" y2="12"></line>
      <line x1="3" y1="6" x2="21" y2="6"></line>
      <line x1="3" y1="18" x2="21" y2="18"></line>
    </svg>
  </symbol>
  <symbol id="svg-arrow-right" viewBox="0 0 24 24">
    <title>Expand</title>
    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor"
      stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather-chevron-right">
      <polyline points="9 18 15 12 9 6"></polyline>
    </svg>
  </symbol>
  <symbol id="svg-sun" viewBox="0 0 24 24">
    <title>Light mode</title>
    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor"
      stroke-width="1" stroke-linecap="round" stroke-linejoin="round" class="feather-sun">
      <circle cx="12" cy="12" r="5"></circle>
      <line x1="12" y1="1" x2="12" y2="3"></line>
      <line x1="12" y1="21" x2="12" y2="23"></line>
      <line x1="4.22" y1="4.22" x2="5.64" y2="5.64"></line>
      <line x1="18.36" y1="18.36" x2="19.78" y2="19.78"></line>
      <line x1="1" y1="12" x2="3" y2="12"></line>
      <line x1="21" y1="12" x2="23" y2="12"></line>
      <line x1="4.22" y1="19.78" x2="5.64" y2="18.36"></line>
      <line x1="18.36" y1="5.64" x2="19.78" y2="4.22"></line>
    </svg>
  </symbol>
  <symbol id="svg-moon" viewBox="0 0 24 24">
    <title>Dark mode</title>
    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor"
      stroke-width="1" stroke-linecap="round" stroke-linejoin="round" class="icon-tabler-moon">
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 3c.132 0 .263 0 .393 0a7.5 7.5 0 0 0 7.92 12.446a9 9 0 1 1 -8.313 -12.454z" />
    </svg>
  </symbol>
  <symbol id="svg-sun-with-moon" viewBox="0 0 24 24">
    <title>Auto light/dark, in light mode</title>
    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor"
      stroke-width="1" stroke-linecap="round" stroke-linejoin="round"
      class="icon-custom-derived-from-feather-sun-and-tabler-moon">
      <path style="opacity: 50%" d="M 5.411 14.504 C 5.471 14.504 5.532 14.504 5.591 14.504 C 3.639 16.319 4.383 19.569 6.931 20.352 C 7.693 20.586 8.512 20.551 9.25 20.252 C 8.023 23.207 4.056 23.725 2.11 21.184 C 0.166 18.642 1.702 14.949 4.874 14.536 C 5.051 14.512 5.231 14.5 5.411 14.5 L 5.411 14.504 Z"/>
      <line x1="14.5" y1="3.25" x2="14.5" y2="1.25"/>
      <line x1="14.5" y1="15.85" x2="14.5" y2="17.85"/>
      <line x1="10.044" y1="5.094" x2="8.63" y2="3.68"/>
      <line x1="19" y1="14.05" x2="20.414" y2="15.464"/>
      <line x1="8.2" y1="9.55" x2="6.2" y2="9.55"/>
      <line x1="20.8" y1="9.55" x2="22.8" y2="9.55"/>
      <line x1="10.044" y1="14.006" x2="8.63" y2="15.42"/>
      <line x1="19" y1="5.05" x2="20.414" y2="3.636"/>
      <circle cx="14.5" cy="9.55" r="3.6"/>
    </svg>
  </symbol>
  <symbol id="svg-moon-with-sun" viewBox="0 0 24 24">
    <title>Auto light/dark, in dark mode</title>
    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor"
      stroke-width="1" stroke-linecap="round" stroke-linejoin="round"
      class="icon-custom-derived-from-feather-sun-and-tabler-moon">
      <path d="M 8.282 7.007 C 8.385 7.007 8.494 7.007 8.595 7.007 C 5.18 10.184 6.481 15.869 10.942 17.24 C 12.275 17.648 13.706 17.589 15 17.066 C 12.851 22.236 5.91 23.143 2.505 18.696 C -0.897 14.249 1.791 7.786 7.342 7.063 C 7.652 7.021 7.965 7 8.282 7 L 8.282 7.007 Z"/>
      <line style="opacity: 50%" x1="18" y1="3.705" x2="18" y2="2.5"/>
      <line style="opacity: 50%" x1="18" y1="11.295" x2="18" y2="12.5"/>
      <line style="opacity: 50%" x1="15.316" y1="4.816" x2="14.464" y2="3.964"/>
      <line style="opacity: 50%" x1="20.711" y1="10.212" x2="21.563" y2="11.063"/>
      <line style="opacity: 50%" x1="14.205" y1="7.5" x2="13.001" y2="7.5"/>
      <line style="opacity: 50%" x1="21.795" y1="7.5" x2="23" y2="7.5"/>
      <line style="opacity: 50%" x1="15.316" y1="10.184" x2="14.464" y2="11.036"/>
      <line style="opacity: 50%" x1="20.711" y1="4.789" x2="21.563" y2="3.937"/>
      <circle style="opacity: 50%" cx="18" cy="7.5" r="2.169"/>
    </svg>
  </symbol>
  <symbol id="svg-pencil" viewBox="0 0 24 24">
    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor"
      stroke-width="1" stroke-linecap="round" stroke-linejoin="round" class="icon-tabler-pencil-code">
      <path d="M4 20h4l10.5 -10.5a2.828 2.828 0 1 0 -4 -4l-10.5 10.5v4" />
      <path d="M13.5 6.5l4 4" />
      <path d="M20 21l2 -2l-2 -2" />
      <path d="M17 17l-2 2l2 2" />
    </svg>
  </symbol>
  <symbol id="svg-eye" viewBox="0 0 24 24">
    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor"
      stroke-width="1" stroke-linecap="round" stroke-linejoin="round" class="icon-tabler-eye-code">
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10 12a2 2 0 1 0 4 0a2 2 0 0 0 -4 0" />
      <path
        d="M11.11 17.958c-3.209 -.307 -5.91 -2.293 -8.11 -5.958c2.4 -4 5.4 -6 9 -6c3.6 0 6.6 2 9 6c-.21 .352 -.427 .688 -.647 1.008" />
      <path d="M20 21l2 -2l-2 -2" />
      <path d="M17 17l-2 2l2 2" />
    </svg>
  </symbol>
</svg>

<input type="checkbox" class="sidebar-toggle" name="__navigation" id="__navigation">
<input type="checkbox" class="sidebar-toggle" name="__toc" id="__toc">
<label class="overlay sidebar-overlay" for="__navigation">
  <div class="visually-hidden">Hide navigation sidebar</div>
</label>
<label class="overlay toc-overlay" for="__toc">
  <div class="visually-hidden">Hide table of contents sidebar</div>
</label>

<a class="skip-to-content muted-link" href="#furo-main-content">Skip to content</a>



<div class="page">
  <header class="mobile-header">
    <div class="header-left">
      <label class="nav-overlay-icon" for="__navigation">
        <div class="visually-hidden">Toggle site navigation sidebar</div>
        <i class="icon"><svg><use href="#svg-menu"></use></svg></i>
      </label>
    </div>
    <div class="header-center">
      <a href="../../../../index.html"><div class="brand">Practical Alloy</div></a>
    </div>
    <div class="header-right">
      <div class="theme-toggle-container theme-toggle-header">
        <button class="theme-toggle">
          <div class="visually-hidden">Toggle Light / Dark / Auto color theme</div>
          <svg class="theme-icon-when-auto-light"><use href="#svg-sun-with-moon"></use></svg>
          <svg class="theme-icon-when-auto-dark"><use href="#svg-moon-with-sun"></use></svg>
          <svg class="theme-icon-when-dark"><use href="#svg-moon"></use></svg>
          <svg class="theme-icon-when-light"><use href="#svg-sun"></use></svg>
        </button>
      </div>
      <label class="toc-overlay-icon toc-header-icon" for="__toc">
        <div class="visually-hidden">Toggle table of contents sidebar</div>
        <i class="icon"><svg><use href="#svg-toc"></use></svg></i>
      </label>
    </div>
  </header>
  <aside class="sidebar-drawer">
    <div class="sidebar-container">
      
      <div class="sidebar-sticky"><a class="sidebar-brand" href="../../../../index.html">
  
  
  <span class="sidebar-brand-text">Practical Alloy</span>
  
</a><form class="sidebar-search-container" method="get" action="../../../../search.html" role="search">
  <input class="sidebar-search" placeholder="Search" name="q" aria-label="Search">
  <input type="hidden" name="check_keywords" value="yes">
  <input type="hidden" name="area" value="default">
</form>
<div id="searchbox"></div><div class="sidebar-scroll"><div class="sidebar-tree">
  <p class="caption" role="heading"><span class="caption-text">Preface</span></p>
<ul>
<li class="toctree-l1"><a class="reference internal" href="../../../about-alloy/index.html">About Alloy</a></li>
<li class="toctree-l1"><a class="reference internal" href="../../../about-book/index.html">About this book</a></li>
</ul>
<p class="caption" role="heading"><span class="caption-text">The Basics</span></p>
<ul class="current">
<li class="toctree-l1"><a class="reference internal" href="../../../structural-modeling/index.html">Structural modeling</a></li>
<li class="toctree-l1 has-children"><a class="reference internal" href="../../../structural-topics/index.html">Advanced topics</a><input class="toctree-checkbox" id="toctree-checkbox-1" name="toctree-checkbox-1" role="switch" type="checkbox"/><label for="toctree-checkbox-1"><div class="visually-hidden">Toggle navigation of Advanced topics</div><i class="icon"><svg><use href="#svg-arrow-right"></use></svg></i></label><ul>
<li class="toctree-l2"><a class="reference internal" href="../../../structural-topics/topics/subset-signatures/index.html">Subset signatures</a></li>
<li class="toctree-l2"><a class="reference internal" href="../../../structural-topics/topics/enumerations/index.html">Enumeration signatures</a></li>
<li class="toctree-l2"><a class="reference internal" href="../../../structural-topics/topics/commands/index.html">Commands in detail</a></li>
<li class="toctree-l2"><a class="reference internal" href="../../../structural-topics/topics/visualization/index.html">Visualization customization</a></li>
<li class="toctree-l2"><a class="reference internal" href="../../../structural-topics/topics/nary-relations/index.html">Higher-arity relations</a></li>
<li class="toctree-l2"><a class="reference internal" href="../../../structural-topics/topics/evaluator/index.html">The instance evaluator</a></li>
<li class="toctree-l2"><a class="reference internal" href="../../../structural-topics/topics/bestiary/index.html">Arrow multiplicity constraints</a></li>
<li class="toctree-l2"><a class="reference internal" href="../../../structural-topics/topics/type-system/index.html">Type system</a></li>
<li class="toctree-l2"><a class="reference internal" href="../../../structural-topics/topics/modules/index.html">Module system</a></li>
<li class="toctree-l2"><a class="reference internal" href="../../../structural-topics/topics/ordering/index.html">The predefined <code class="code highlight alloy practicalalloy docutils literal highlight-practicalalloy"><span class="n">ordering</span></code> module</a></li>
<li class="toctree-l2"><a class="reference internal" href="../../../structural-topics/topics/relational-logic/index.html">A relational logic primer</a></li>
<li class="toctree-l2"><a class="reference internal" href="../../../structural-topics/topics/model-finding/index.html">Model finding</a></li>
<li class="toctree-l2"><a class="reference internal" href="../../../structural-topics/topics/testing-instances/index.html">Encoding test instances</a></li>
<li class="toctree-l2"><a class="reference internal" href="../../../structural-topics/topics/recursion/index.html">Handling recursion</a></li>
<li class="toctree-l2"><a class="reference internal" href="../../../structural-topics/topics/integers/index.html">Working with integers</a></li>
<li class="toctree-l2"><a class="reference internal" href="../../../structural-topics/topics/signature-facts/index.html">Signature facts</a></li>
</ul>
</li>
<li class="toctree-l1"><a class="reference internal" href="../../../behavioral-modeling/index.html">Behavioral modeling</a></li>
<li class="toctree-l1 current has-children"><a class="reference internal" href="../../index.html">Advanced topics</a><input checked="" class="toctree-checkbox" id="toctree-checkbox-2" name="toctree-checkbox-2" role="switch" type="checkbox"/><label for="toctree-checkbox-2"><div class="visually-hidden">Toggle navigation of Advanced topics</div><i class="icon"><svg><use href="#svg-arrow-right"></use></svg></i></label><ul class="current">
<li class="toctree-l2"><a class="reference internal" href="../temporal-logic/index.html">A temporal logic primer</a></li>
<li class="toctree-l2"><a class="reference internal" href="../mutable-toplevel-signatures/index.html">Mutable top-level signatures</a></li>
<li class="toctree-l2"><a class="reference internal" href="../pointwise-effects/index.html">Pointwise effects</a></li>
<li class="toctree-l2"><a class="reference internal" href="../macros/index.html">Macros</a></li>
<li class="toctree-l2"><a class="reference internal" href="../meta/index.html">Meta-capabilities</a></li>
<li class="toctree-l2"><a class="reference internal" href="../event-depiction/index.html">An idiom for event depiction</a></li>
<li class="toctree-l2"><a class="reference internal" href="../scenarios/index.html">Encoding trace scenarios</a></li>
<li class="toctree-l2"><a class="reference internal" href="../evaluator/index.html">The trace evaluator</a></li>
<li class="toctree-l2"><a class="reference internal" href="../fairness/index.html">Safety, liveness, and fairness</a></li>
<li class="toctree-l2 current current-page"><a class="current reference internal" href="#">Inductive invariants</a></li>
<li class="toctree-l2"><a class="reference internal" href="../sequences/index.html">Sequences</a></li>
</ul>
</li>
</ul>
<p class="caption" role="heading"><span class="caption-text">Applications</span></p>
<ul>
<li class="toctree-l1"><a class="reference internal" href="../../../protocol-design/index.html">Protocol design</a></li>
</ul>
<p class="caption" role="heading"><span class="caption-text">Resources</span></p>
<ul>
<li class="toctree-l1"><a class="reference internal" href="../../../../bibliography.html">Bibliography</a></li>
<li class="toctree-l1"><a class="reference internal" href="../../../../genindex.html">Index</a></li>
</ul>

</div>
</div>

      </div>
      
    </div>
  </aside>
  <div class="main">
    <div class="content">
      <div class="article-container">
        <a href="#" class="back-to-top muted-link">
          <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">
            <path d="M13 20h-2V8l-5.5 5.5-1.42-1.42L12 4.16l7.92 7.92-1.42 1.42L13 8v12z"></path>
          </svg>
          <span>Back to top</span>
        </a>
        <div class="content-icon-container">
          <div class="view-this-page">
  <a class="muted-link" href="../../../../_sources/chapters/behavioral-topics/topics/inductive-invariants/index.rst.txt" title="View this page">
    <svg><use href="#svg-eye"></use></svg>
    <span class="visually-hidden">View this page</span>
  </a>
</div>
<div class="theme-toggle-container theme-toggle-content">
            <button class="theme-toggle">
              <div class="visually-hidden">Toggle Light / Dark / Auto color theme</div>
              <svg class="theme-icon-when-auto-light"><use href="#svg-sun-with-moon"></use></svg>
              <svg class="theme-icon-when-auto-dark"><use href="#svg-moon-with-sun"></use></svg>
              <svg class="theme-icon-when-dark"><use href="#svg-moon"></use></svg>
              <svg class="theme-icon-when-light"><use href="#svg-sun"></use></svg>
            </button>
          </div>
          <label class="toc-overlay-icon toc-content-icon" for="__toc">
            <div class="visually-hidden">Toggle table of contents sidebar</div>
            <i class="icon"><svg><use href="#svg-toc"></use></svg></i>
          </label>
        </div>
        <article role="main" id="furo-main-content">
          <section id="index-0">
<span id="inductive-invariants"></span><span id="id1"></span><h1>Inductive invariants<a class="headerlink" href="#index-0" title="Link to this heading">¶</a></h1>
<p>An invariant is a state property (that is, one that only depends on one state) that is true in every state of every trace. In terms of temporal logic, we can assert an invariant by putting the state property under an <code class="code highlight alloy practicalalloy docutils literal highlight-practicalalloy"><span class="ow">always</span></code> connective, as was done for <code class="code highlight alloy practicalalloy docutils literal highlight-practicalalloy"><span class="n">shared_are_accessible</span></code> in the file sharing model.</p>
<div class="highlight-practicalalloy notranslate"><div class="highlight"><pre><span></span><span class="k">assert</span> <span class="nf">shared_are_accessible</span> <span class="o">{</span>
  <span class="ow">always</span> <span class="n">shared</span><span class="o">.</span><span class="n">Token</span> <span class="ow">in</span> <span class="n">uploaded</span> <span class="o">-</span> <span class="n">trashed</span>
<span class="o">}</span>
</pre></div>
</div>
<p>Now suppose we want to check <code class="code highlight alloy practicalalloy docutils literal highlight-practicalalloy"><span class="n">shared_are_accessible</span></code> for an unbounded number of steps and an overall scope of 10.</p>
<div class="highlight-practicalalloy notranslate"><div class="highlight"><pre><span></span><span class="k">check</span> <span class="n">shared_are_accessible</span> <span class="k">for</span> <span class="mi">10</span> <span class="k">but</span> <span class="mi">1</span><span class="o">..</span> <span class="k">steps</span>
</pre></div>
</div>
<p>On a recent computer, this verification already takes a couple of minutes and this verification time would grow quickly if we increased the scope.</p>
<a class="reference internal image-reference" href="../../../../_images/log1.png"><img alt="../../../../_images/log1.png" class="align-center" src="../../../../_images/log1.png" style="width: 550px;" />
</a>
<p>Is there an alternative, more efficient way to verify this invariant?</p>
<section id="verification-by-induction">
<h2>Verification by induction<a class="headerlink" href="#verification-by-induction" title="Link to this heading">¶</a></h2>
<p>Actually we could try to verify this property by <em>induction</em>, that is by showing that:</p>
<ul class="simple">
<li><p><em>initiation</em>: the property holds in the initial state.</p></li>
<li><p><em>preservation</em>: the property is preserved by all events, that is, given a state satisfying the property, any possible following state also satisfies the property.</p></li>
</ul>
<p>These conditions are particularly interesting because one only has to consider a scope of one (resp. two) state for verifying the first (resp. second) condition, rather than considering a whole trace of unbounded length as in the <code class="code highlight alloy practicalalloy docutils literal highlight-practicalalloy"><span class="n">shared_are_accessible</span></code> assertion shown above.</p>
<p>To be able to check these two conditions, we must first ensure that the initial state and events are not stated as facts, as facts may remove important behaviors. This requires a very small refactoring of the model:</p>
<ul class="simple">
<li><p>we change the <code class="code highlight alloy practicalalloy docutils literal highlight-practicalalloy"><span class="n">init</span></code> fact into a predicate;</p></li>
<li><p>we also change the <code class="code highlight alloy practicalalloy docutils literal highlight-practicalalloy"><span class="n">transitions</span></code> fact into a predicate;</p></li>
<li><p>we extract into a <code class="code highlight alloy practicalalloy docutils literal highlight-practicalalloy"><span class="n">next</span></code> predicate the formula inside the outermost <code class="code highlight alloy practicalalloy docutils literal highlight-practicalalloy"><span class="ow">always</span></code> of <code class="code highlight alloy practicalalloy docutils literal highlight-practicalalloy"><span class="n">transitions</span></code>.</p></li>
</ul>
<div class="highlight-practicalalloy notranslate"><div class="highlight"><pre><span></span><span class="k">pred</span> <span class="nf">init</span> <span class="o">{</span>
  <span class="c1">// Initially there are no files uploaded nor shared</span>
  <span class="k">no</span> <span class="n">uploaded</span>
  <span class="k">no</span> <span class="n">shared</span>
<span class="o">}</span>

<span class="k">pred</span> <span class="nf">next</span> <span class="o">{</span>
  <span class="o">(</span><span class="k">some</span> <span class="n">f</span> <span class="p">:</span> <span class="n">File</span> <span class="o">|</span> <span class="n">upload</span><span class="o">[</span><span class="n">f</span><span class="o">]</span> <span class="ow">or</span> <span class="n">delete</span><span class="o">[</span><span class="n">f</span><span class="o">]</span> <span class="ow">or</span> <span class="n">restore</span><span class="o">[</span><span class="n">f</span><span class="o">])</span> <span class="ow">or</span>
  <span class="o">(</span><span class="k">some</span> <span class="n">f</span> <span class="p">:</span> <span class="n">File</span><span class="p">,</span> <span class="n">t</span> <span class="p">:</span> <span class="n">Token</span> <span class="o">|</span> <span class="n">share</span><span class="o">[</span><span class="n">f</span><span class="p">,</span> <span class="n">t</span><span class="o">])</span> <span class="ow">or</span>
  <span class="o">(</span><span class="k">some</span> <span class="n">t</span> <span class="p">:</span> <span class="n">Token</span> <span class="o">|</span> <span class="n">download</span><span class="o">[</span><span class="n">t</span><span class="o">])</span> <span class="ow">or</span>
  <span class="n">empty</span> <span class="ow">or</span>
  <span class="n">stutter</span>
<span class="o">}</span>

<span class="k">pred</span> <span class="nf">traces</span> <span class="o">{</span>
  <span class="n">init</span>
  <span class="ow">always</span> <span class="n">next</span>
<span class="o">}</span>
</pre></div>
</div>
<p>The <code class="code highlight alloy practicalalloy docutils literal highlight-practicalalloy"><span class="n">traces</span></code> predicate will be of no use for our verification by induction but it must still be used as a premise in normal temporal assertions to restrict the verification to valid traces. For instance, <code class="code highlight alloy practicalalloy docutils literal highlight-practicalalloy"><span class="n">shared_are_accessible</span></code> should be rewritten as follows.</p>
<div class="highlight-practicalalloy notranslate"><div class="highlight"><pre><span></span><span class="k">assert</span> <span class="nf">shared_are_accessible</span> <span class="o">{</span>
  <span class="n">traces</span> <span class="ow">implies</span> <span class="ow">always</span> <span class="n">shared</span><span class="o">.</span><span class="n">Token</span> <span class="ow">in</span> <span class="n">uploaded</span> <span class="o">-</span> <span class="n">trashed</span>
<span class="o">}</span>
</pre></div>
</div>
<p>Moreover, fairness constraint <code class="code highlight alloy practicalalloy docutils literal highlight-practicalalloy"><span class="n">fairness_on_empty</span></code> should also be moved from a fact into a predicate and called when needed in the liveness assertion.</p>
<p>Let us now come back to our verification by induction. First we specify our tentative invariant as a predicate.</p>
<div class="highlight-practicalalloy notranslate"><div class="highlight"><pre><span></span><span class="k">pred</span> <span class="nf">inv_shared_are_accessible</span> <span class="o">{</span>
  <span class="n">shared</span><span class="o">.</span><span class="n">Token</span> <span class="ow">in</span> <span class="n">uploaded</span> <span class="o">-</span> <span class="n">trashed</span>
<span class="o">}</span>
</pre></div>
</div>
<p>Then we assert the conditions for initiation and preservation. In the first case, we say that <code class="code highlight alloy practicalalloy docutils literal highlight-practicalalloy"><span class="n">init</span></code> implies the invariant; in the second case, invariant preservation means that, in every state that satisfies the invariant, if an event happens, then any following state also satisfies the invariant.</p>
<div class="highlight-practicalalloy notranslate"><div class="highlight"><pre><span></span><span class="k">assert</span> <span class="nf">init_inv_shared_are_accessible</span> <span class="o">{</span>
  <span class="n">init</span> <span class="ow">implies</span> <span class="n">inv_shared_are_accessible</span>
<span class="o">}</span>

<span class="k">assert</span> <span class="nf">pres_inv_shared_are_accessible</span> <span class="o">{</span>
  <span class="o">(</span><span class="n">inv_shared_are_accessible</span> <span class="ow">and</span> <span class="n">next</span><span class="o">)</span> <span class="ow">implies</span>
    <span class="ow">after</span> <span class="n">inv_shared_are_accessible</span>
<span class="o">}</span>
</pre></div>
</div>
<p>As explained above, an interesting aspect of this verification technique is that we can focus on traces of length 1 for <code class="code highlight alloy practicalalloy docutils literal highlight-practicalalloy"><span class="n">init_inv_shared_are_accessible</span></code> and 2 for <code class="code highlight alloy practicalalloy docutils literal highlight-practicalalloy"><span class="n">pres_inv_shared_are_accessible</span></code> (incidentally, it allows us to rely on a bounded solver, if needed).</p>
<div class="highlight-practicalalloy notranslate"><div class="highlight"><pre><span></span><span class="k">check</span> <span class="n">init_inv_shared_are_accessible</span> <span class="k">for</span> <span class="mi">10</span> <span class="k">but</span> <span class="mi">1</span> <span class="k">steps</span>
<span class="k">check</span> <span class="n">pres_inv_shared_are_accessible</span> <span class="k">for</span> <span class="mi">10</span> <span class="k">but</span> <span class="mi">2</span> <span class="k">steps</span>
</pre></div>
</div>
<p>Checking both these assertions yields no counterexample, thus establishing that the property is indeed an invariant (up to the given scope of files and tokens, of course). Due to the use of the induction principle, such an invariant is called an <em>inductive invariant</em>.</p>
<p>Verifying this inductive invariant took less than a second on a normal computer, more than 100 times faster than the original <code class="code highlight alloy practicalalloy docutils literal highlight-practicalalloy"><span class="k">check</span></code>! This gain in speed is interesting as it could allow us to consider larger scopes for signatures, thus increasing our confidence in the correctness of the property.</p>
<a class="reference internal image-reference" href="../../../../_images/log2.png"><img alt="../../../../_images/log2.png" class="align-center" src="../../../../_images/log2.png" style="width: 550px;" />
</a>
<div class="sd-sphinx-override sd-cards-carousel sd-card-cols-2 docutils">
<div class="sd-card sd-sphinx-override sd-mb-3 sd-shadow-sm sd-card-hover docutils">
<div class="sd-card-header docutils">
<p class="sd-card-text"><svg version="1.1" width="1.0em" height="1.0em" class="sd-octicon sd-octicon-file-badge" viewBox="0 0 16 16" aria-hidden="true"><path d="M2.75 1.5a.25.25 0 0 0-.25.25v11.5c0 .138.112.25.25.25h3.5a.75.75 0 0 1 0 1.5h-3.5A1.75 1.75 0 0 1 1 13.25V1.75C1 .784 1.784 0 2.75 0h8a1.75 1.75 0 0 1 1.508.862.75.75 0 1 1-1.289.768.25.25 0 0 0-.219-.13h-8Z"></path><path d="M8 7a3.999 3.999 0 0 1 7.605-1.733 4 4 0 0 1-1.115 4.863l.995 4.973a.75.75 0 0 1-.991.852l-2.409-.876a.248.248 0 0 0-.17 0l-2.409.876a.75.75 0 0 1-.991-.852l.994-4.973A3.994 3.994 0 0 1 8 7Zm4-2.5a2.5 2.5 0 1 0 0 5 2.5 2.5 0 0 0 0-5Zm0 6.5c-.373 0-.745-.051-1.104-.154l-.649 3.243 1.155-.42c.386-.14.81-.14 1.196 0l1.155.42-.649-3.243A4.004 4.004 0 0 1 12 11Z"></path></svg> Alloy model</p>
</div>
<div class="sd-card-body docutils">
<div class="sd-card-title sd-font-weight-bold docutils">
Full model for the section</div>
<p class="sd-card-text">Download and explore the files relevant for the model at this point of the book.</p>
</div>
<a class="sd-stretched-link sd-hide-link-text reference external" href="https://github.com/practicalalloy/models/tree/main/behavioral-topics/inductive-invariants/non-inductive-invariants"><span>https://github.com/practicalalloy/models/tree/main/behavioral-topics/inductive-invariants/non-inductive-invariants</span></a></div>
</div>
</section>
<section id="non-inductive-invariants">
<h2>Non-inductive invariants<a class="headerlink" href="#non-inductive-invariants" title="Link to this heading">¶</a></h2>
<p>At this point you might ask: why not  check all (supposed) invariants using this method?</p>
<p>Before addressing this question, let us remark that we had to refactor our model to apply the induction principle. One may argue that the resulting model, if still readable, is a little convoluted with respect to the original version, in particular because every temporal assertion should be preceded by the <code class="code highlight alloy practicalalloy docutils literal highlight-practicalalloy"><span class="n">traces</span></code> premise. Admittedly, it might be considered a low price to pay considering the apparent added value.</p>
<p>A more important issue, however, is that <em>not all invariants are inductive</em>. Consider, for example, the alternative <code class="code highlight alloy practicalalloy docutils literal highlight-practicalalloy"><span class="n">inv_shared_are_uploaded</span></code> property that says that all shared files are uploaded.</p>
<div class="highlight-practicalalloy notranslate"><div class="highlight"><pre><span></span><span class="k">pred</span> <span class="nf">inv_shared_are_uploaded</span> <span class="o">{</span>
  <span class="n">shared</span><span class="o">.</span><span class="n">Token</span> <span class="ow">in</span> <span class="n">uploaded</span>
<span class="o">}</span>
</pre></div>
</div>
<p>Obviously, since <code class="code highlight alloy practicalalloy docutils literal highlight-practicalalloy"><span class="n">inv_shared_are_uploaded</span></code> is a weakened variation of property <code class="code highlight alloy practicalalloy docutils literal highlight-practicalalloy"><span class="n">inv_shared_are_accessible</span></code>, it is also an invariant of this model, as the command below confirms.</p>
<div class="highlight-practicalalloy notranslate"><div class="highlight"><pre><span></span><span class="k">assert</span> <span class="nf">shared_are_uploaded</span> <span class="o">{</span>
  <span class="n">traces</span> <span class="ow">implies</span> <span class="ow">always</span> <span class="n">inv_shared_are_uploaded</span>
<span class="o">}</span>
<span class="k">check</span> <span class="n">shared_are_uploaded</span> <span class="k">for</span> <span class="mi">10</span> <span class="k">but</span> <span class="mi">1</span><span class="o">..</span> <span class="k">steps</span>
</pre></div>
</div>
<p>But if we proceed to check that <code class="code highlight alloy practicalalloy docutils literal highlight-practicalalloy"><span class="n">inv_shared_are_uploaded</span></code> is an inductive invariant, then command <code class="code highlight alloy practicalalloy docutils literal highlight-practicalalloy"><span class="n">pres_inv_shared_are_uploaded</span></code> yields a counterexample.</p>
<div class="highlight-practicalalloy notranslate"><div class="highlight"><pre><span></span><span class="k">assert</span> <span class="nf">init_inv_shared_are_uploaded</span> <span class="o">{</span>
  <span class="n">init</span> <span class="ow">implies</span> <span class="n">inv_shared_are_uploaded</span>
<span class="o">}</span>
<span class="k">check</span> <span class="n">init_inv_shared_are_uploaded</span> <span class="k">for</span> <span class="mi">10</span> <span class="k">but</span> <span class="mi">1</span> <span class="k">steps</span>

<span class="k">assert</span> <span class="nf">pres_inv_shared_are_uploaded</span> <span class="o">{</span>
  <span class="o">(</span><span class="n">inv_shared_are_uploaded</span> <span class="ow">and</span> <span class="n">next</span><span class="o">)</span> <span class="ow">implies</span>
    <span class="ow">after</span> <span class="n">inv_shared_are_uploaded</span>
<span class="o">}</span>
<span class="k">check</span> <span class="n">pres_inv_shared_are_uploaded</span> <span class="k">for</span> <span class="mi">10</span> <span class="k">but</span> <span class="mi">2</span> <span class="k">steps</span>
</pre></div>
</div>
<p>For the sake of readability, we replay the command but with a scope of 1, which also yields a (smaller) counterexample.</p>
<div class="highlight-practicalalloy notranslate"><div class="highlight"><pre><span></span><span class="k">check</span> <span class="n">pres_inv_shared_are_uploaded</span> <span class="k">for</span> <span class="mi">1</span> <span class="k">but</span> <span class="mi">2</span> <span class="k">steps</span>
</pre></div>
</div>
<a class="reference external image-reference" href="https://github.com/practicalalloy/models/blob/a657a3dd79e9e138504708462c9792d158a8dff2/behavioral-topics/inductive-invariants/instance1/filesharing.als#L165-L174"><img alt="Get the code to generate this instance." class="align-center" src="../../../../_images/instance110.png" style="width: 550px;" />
</a>
<p>In this counterexample, there is a shared file in the trash in the first states, which is then no longer uploaded after the trash is emptied. The first state satisfies <code class="code highlight alloy practicalalloy docutils literal highlight-practicalalloy"><span class="n">pres_inv_shared_are_uploaded</span></code> and the second one does not. It might seem contradictory, as we already know that <code class="code highlight alloy practicalalloy docutils literal highlight-practicalalloy"><span class="n">inv_shared_are_uploaded</span></code> is an invariant. But, after close inspection, it actually appears that these two states are <em>unreachable</em>, that is they do not exist in any possible valid trace: once a file is deleted, it can no longer be shared. This could be confirmed by writing an adequate <code class="code highlight alloy practicalalloy docutils literal highlight-practicalalloy"><span class="k">run</span></code> command. However, this is in general a bad idea as the command would run for a long time, (because of the absence of a satisfying instance), thus defeating the purpose of using this inductive approach.</p>
<p>What this example illustrates is that this method of verification does not only consider states appearing in all possible traces but also any other state that satisfies the tentative inductive invariant and that has a successor through <code class="code highlight alloy practicalalloy docutils literal highlight-practicalalloy"><span class="n">next</span></code>. This is why getting a counterexample when checking <code class="code highlight alloy practicalalloy docutils literal highlight-practicalalloy"><span class="n">pres_inv_shared_are_uploaded</span></code> does not contradict the fact that <code class="code highlight alloy practicalalloy docutils literal highlight-practicalalloy"><span class="n">inv_shared_are_uploaded</span></code> is an invariant of our model: the former property concerns states related by the <code class="code highlight alloy practicalalloy docutils literal highlight-practicalalloy"><span class="n">next</span></code> predicate (even unreachable ones), while the latter only concerns reachable states according to <code class="code highlight alloy practicalalloy docutils literal highlight-practicalalloy"><span class="n">traces</span></code>.</p>
<div class="sd-sphinx-override sd-cards-carousel sd-card-cols-2 docutils">
<div class="sd-card sd-sphinx-override sd-mb-3 sd-shadow-sm sd-card-hover docutils">
<div class="sd-card-header docutils">
<p class="sd-card-text"><svg version="1.1" width="1.0em" height="1.0em" class="sd-octicon sd-octicon-file-badge" viewBox="0 0 16 16" aria-hidden="true"><path d="M2.75 1.5a.25.25 0 0 0-.25.25v11.5c0 .138.112.25.25.25h3.5a.75.75 0 0 1 0 1.5h-3.5A1.75 1.75 0 0 1 1 13.25V1.75C1 .784 1.784 0 2.75 0h8a1.75 1.75 0 0 1 1.508.862.75.75 0 1 1-1.289.768.25.25 0 0 0-.219-.13h-8Z"></path><path d="M8 7a3.999 3.999 0 0 1 7.605-1.733 4 4 0 0 1-1.115 4.863l.995 4.973a.75.75 0 0 1-.991.852l-2.409-.876a.248.248 0 0 0-.17 0l-2.409.876a.75.75 0 0 1-.991-.852l.994-4.973A3.994 3.994 0 0 1 8 7Zm4-2.5a2.5 2.5 0 1 0 0 5 2.5 2.5 0 0 0 0-5Zm0 6.5c-.373 0-.745-.051-1.104-.154l-.649 3.243 1.155-.42c.386-.14.81-.14 1.196 0l1.155.42-.649-3.243A4.004 4.004 0 0 1 12 11Z"></path></svg> Alloy model</p>
</div>
<div class="sd-card-body docutils">
<div class="sd-card-title sd-font-weight-bold docutils">
Full model for the section</div>
<p class="sd-card-text">Download and explore the files relevant for the model at this point of the book.</p>
</div>
<a class="sd-stretched-link sd-hide-link-text reference external" href="https://github.com/practicalalloy/models/tree/main/behavioral-topics/inductive-invariants/non-inductive-invariants"><span>https://github.com/practicalalloy/models/tree/main/behavioral-topics/inductive-invariants/non-inductive-invariants</span></a></div>
</div>
</section>
<section id="invariant-strengthening">
<h2>Invariant strengthening<a class="headerlink" href="#invariant-strengthening" title="Link to this heading">¶</a></h2>
<p>Although <code class="code highlight alloy practicalalloy docutils literal highlight-practicalalloy"><span class="n">inv_shared_are_uploaded</span></code> is not inductive, it does not mean that we cannot rely on the inductive invariant method and can only resort to checking the temporal constraint <code class="code highlight alloy practicalalloy docutils literal highlight-practicalalloy"><span class="n">shared_are_uploaded</span></code>. Alternatively, a way to check that an invariant such as <code class="code highlight alloy practicalalloy docutils literal highlight-practicalalloy"><span class="n">inv_shared_are_uploaded</span></code>  holds is to exhibit <em>another</em> invariant that <em>is</em> inductive and that is <em>stronger</em> than the former (that is, it implies it). Indeed, since the stronger invariant is inductive, it holds in every reachable state, and since it implies the original invariant, the latter also necessarily holds in every reachable state.</p>
<p>In our case, we already have an invariant known to be inductive at our disposal: <code class="code highlight alloy practicalalloy docutils literal highlight-practicalalloy"><span class="n">inv_shared_are_accessible</span></code>. We are therefore only left with confirming that it is stronger than <code class="code highlight alloy practicalalloy docutils literal highlight-practicalalloy"><span class="n">inv_shared_are_uploaded</span></code>:</p>
<div class="highlight-practicalalloy notranslate"><div class="highlight"><pre><span></span><span class="k">assert</span> <span class="nf">accessible_is_uploaded</span> <span class="o">{</span>
  <span class="n">inv_shared_are_accessible</span> <span class="ow">implies</span> <span class="n">inv_shared_are_uploaded</span>
<span class="o">}</span>
<span class="k">check</span> <span class="n">accessible_is_uploaded</span> <span class="k">for</span> <span class="mi">10</span> <span class="k">but</span> <span class="mi">1</span> <span class="k">steps</span>
</pre></div>
</div>
<p>This obviously succeeds. However, in general, finding inductive invariants is notoriously hard. For this reason, although it might be less efficient, using a temporal constraint such as <code class="code highlight alloy practicalalloy docutils literal highlight-practicalalloy"><span class="n">shared_are_accessible</span></code> to check an invariant is a relevant approach, at least as a first step.</p>
<div class="sd-sphinx-override sd-cards-carousel sd-card-cols-2 docutils">
<div class="sd-card sd-sphinx-override sd-mb-3 sd-shadow-sm sd-card-hover docutils">
<div class="sd-card-header docutils">
<p class="sd-card-text"><svg version="1.1" width="1.0em" height="1.0em" class="sd-octicon sd-octicon-file-badge" viewBox="0 0 16 16" aria-hidden="true"><path d="M2.75 1.5a.25.25 0 0 0-.25.25v11.5c0 .138.112.25.25.25h3.5a.75.75 0 0 1 0 1.5h-3.5A1.75 1.75 0 0 1 1 13.25V1.75C1 .784 1.784 0 2.75 0h8a1.75 1.75 0 0 1 1.508.862.75.75 0 1 1-1.289.768.25.25 0 0 0-.219-.13h-8Z"></path><path d="M8 7a3.999 3.999 0 0 1 7.605-1.733 4 4 0 0 1-1.115 4.863l.995 4.973a.75.75 0 0 1-.991.852l-2.409-.876a.248.248 0 0 0-.17 0l-2.409.876a.75.75 0 0 1-.991-.852l.994-4.973A3.994 3.994 0 0 1 8 7Zm4-2.5a2.5 2.5 0 1 0 0 5 2.5 2.5 0 0 0 0-5Zm0 6.5c-.373 0-.745-.051-1.104-.154l-.649 3.243 1.155-.42c.386-.14.81-.14 1.196 0l1.155.42-.649-3.243A4.004 4.004 0 0 1 12 11Z"></path></svg> Alloy model</p>
</div>
<div class="sd-card-body docutils">
<div class="sd-card-title sd-font-weight-bold docutils">
Full model for the section</div>
<p class="sd-card-text">Download and explore the files relevant for the model at this point of the book.</p>
</div>
<a class="sd-stretched-link sd-hide-link-text reference external" href="https://github.com/practicalalloy/models/tree/main/behavioral-topics/inductive-invariants/invariant-strengthening"><span>https://github.com/practicalalloy/models/tree/main/behavioral-topics/inductive-invariants/invariant-strengthening</span></a></div>
</div>
</section>
</section>

        </article>
      </div>
      <footer>
        
        <div class="related-pages">
          <a class="next-page" href="../sequences/index.html">
              <div class="page-info">
                <div class="context">
                  <span>Next</span>
                </div>
                <div class="title">Sequences</div>
              </div>
              <svg class="furo-related-icon"><use href="#svg-arrow-right"></use></svg>
            </a>
          <a class="prev-page" href="../fairness/index.html">
              <svg class="furo-related-icon"><use href="#svg-arrow-right"></use></svg>
              <div class="page-info">
                <div class="context">
                  <span>Previous</span>
                </div>
                
                <div class="title">Safety, liveness, and fairness</div>
                
              </div>
            </a>
        </div>
        <div class="bottom-of-page">
          <div class="left-details">
            <div class="copyright">
                Copyright &#169; 2021-2025, Alcino Cunha, Nuno Macedo, Julien Brunel, David Chemouil
            </div>
            Made with <a href="https://www.sphinx-doc.org/">Sphinx</a> and <a class="muted-link" href="https://pradyunsg.me">@pradyunsg</a>'s
            
            <a href="https://github.com/pradyunsg/furo">Furo</a>
            <div class="last-updated">
              Last updated on Jun 17, 2024</div>
          </div>
          <div class="right-details">
            
          </div>
        </div>
        
      </footer>
    </div>
    <aside class="toc-drawer">
      
      
      <div class="toc-sticky toc-scroll">
        <div class="toc-title-container">
          <span class="toc-title">
            On this page
          </span>
        </div>
        <div class="toc-tree-container">
          <div class="toc-tree">
            <ul>
<li><a class="reference internal" href="#">Inductive invariants</a><ul>
<li><a class="reference internal" href="#verification-by-induction">Verification by induction</a></li>
<li><a class="reference internal" href="#non-inductive-invariants">Non-inductive invariants</a></li>
<li><a class="reference internal" href="#invariant-strengthening">Invariant strengthening</a></li>
</ul>
</li>
</ul>

          </div>
        </div>
      </div>
      
      
    </aside>
  </div>
</div><script src="../../../../_static/documentation_options.js?v=10f1778b"></script>
    <script src="../../../../_static/doctools.js?v=9bcbadda"></script>
    <script src="../../../../_static/sphinx_highlight.js?v=dc90522c"></script>
    <script src="../../../../_static/scripts/furo.js?v=5fa4622c"></script>
    <script src="../../../../_static/clipboard.min.js?v=a7894cd8"></script>
    <script src="../../../../_static/copybutton.js?v=f281be69"></script>
    <script kind="utterances">

    var commentsRunWhenDOMLoaded = cb => {
    if (document.readyState != 'loading') {
        cb()
    } else if (document.addEventListener) {
        document.addEventListener('DOMContentLoaded', cb)
    } else {
        document.attachEvent('onreadystatechange', function() {
        if (document.readyState == 'complete') cb()
        })
    }
}

var addUtterances = () => {
    var script = document.createElement("script");
    script.type = "text/javascript";
    script.src = "https://utteranc.es/client.js";
    script.async = "async";

    script.setAttribute("repo", "practicalalloy/practicalalloy.github.io");
    script.setAttribute("issue-term", "pathname");
    script.setAttribute("theme", "github-light");
    script.setAttribute("label", "💬 comment");
    script.setAttribute("crossorigin", "anonymous");

    sections = document.querySelectorAll("div.section");
    if (sections !== null) {
        section = sections[sections.length-1];
        section.appendChild(script);
    }
}
commentsRunWhenDOMLoaded(addUtterances);
</script>
    <script src="../../../../_static/design-tabs.js?v=f930bc37"></script>
    </body>
</html>