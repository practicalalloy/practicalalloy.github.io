<!doctype html>
<html class="no-js" lang="en" data-content_root="../../../../">
  <head><meta charset="utf-8"/>
    <meta name="viewport" content="width=device-width,initial-scale=1"/>
    <meta name="color-scheme" content="light dark"><meta name="viewport" content="width=device-width, initial-scale=1" />

    <meta property="article:modified_time" content="2025-02-16T21:25:24+01:00" /><link rel="index" title="Index" href="../../../../genindex.html" /><link rel="search" title="Search" href="../../../../search.html" /><link rel="next" title="An idiom for event depiction" href="../event-depiction/index.html" /><link rel="prev" title="Macros" href="../macros/index.html" />

    <!-- Generated with Sphinx 7.2.6 and Furo 2024.08.06 -->
        <title>Meta-capabilities - Practical Alloy</title>
      <link rel="stylesheet" type="text/css" href="../../../../_static/pygments.css?v=a746c00c" />
    <link rel="stylesheet" type="text/css" href="../../../../_static/styles/furo.css?v=354aac6f" />
    <link rel="stylesheet" type="text/css" href="../../../../_static/copybutton.css?v=8f9e6779" />
    <link rel="stylesheet" type="text/css" href="../../../../_static/design-style.1e8bd061cd6da7fc9cf755528e8ffc24.min.css?v=0a3b3ea7" />
    <link rel="stylesheet" type="text/css" href="../../../../_static/styles/furo-extensions.css?v=302659d7" />
    <link rel="stylesheet" type="text/css" href="../../../../_static/practicalalloy.css?v=2ee171b3" />
    <link crossorigin="anonymous" integrity="sha384-DyZ88mC6Up2uqS4h/KRgHuoeGwBcD4Ng9SiP4dIRy0EXTlnuz47vAwmeGwVChigm" rel="stylesheet" type="text/css" href="https://use.fontawesome.com/releases/v5.15.4/css/all.css" />
    
    


<style>
  body {
    --color-code-background: #f8f8f8;
  --color-code-foreground: black;
  --color-brand-primary: #2a5adf;
  --color-brand-content: #2a5adf;
  
  }
  @media not print {
    body[data-theme="dark"] {
      --color-code-background: #202020;
  --color-code-foreground: #d0d0d0;
  
    }
    @media (prefers-color-scheme: dark) {
      body:not([data-theme="light"]) {
        --color-code-background: #202020;
  --color-code-foreground: #d0d0d0;
  
      }
    }
  }
</style></head>
  <body>
    
    <script>
      document.body.dataset.theme = localStorage.getItem("theme") || "auto";
    </script>
    

<svg xmlns="http://www.w3.org/2000/svg" style="display: none;">
  <symbol id="svg-toc" viewBox="0 0 24 24">
    <title>Contents</title>
    <svg stroke="currentColor" fill="currentColor" stroke-width="0" viewBox="0 0 1024 1024">
      <path d="M408 442h480c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8H408c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8zm-8 204c0 4.4 3.6 8 8 8h480c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8H408c-4.4 0-8 3.6-8 8v56zm504-486H120c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h784c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm0 632H120c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h784c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zM115.4 518.9L271.7 642c5.8 4.6 14.4.5 14.4-6.9V388.9c0-7.4-8.5-11.5-14.4-6.9L115.4 505.1a8.74 8.74 0 0 0 0 13.8z"/>
    </svg>
  </symbol>
  <symbol id="svg-menu" viewBox="0 0 24 24">
    <title>Menu</title>
    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor"
      stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather-menu">
      <line x1="3" y1="12" x2="21" y2="12"></line>
      <line x1="3" y1="6" x2="21" y2="6"></line>
      <line x1="3" y1="18" x2="21" y2="18"></line>
    </svg>
  </symbol>
  <symbol id="svg-arrow-right" viewBox="0 0 24 24">
    <title>Expand</title>
    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor"
      stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather-chevron-right">
      <polyline points="9 18 15 12 9 6"></polyline>
    </svg>
  </symbol>
  <symbol id="svg-sun" viewBox="0 0 24 24">
    <title>Light mode</title>
    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor"
      stroke-width="1" stroke-linecap="round" stroke-linejoin="round" class="feather-sun">
      <circle cx="12" cy="12" r="5"></circle>
      <line x1="12" y1="1" x2="12" y2="3"></line>
      <line x1="12" y1="21" x2="12" y2="23"></line>
      <line x1="4.22" y1="4.22" x2="5.64" y2="5.64"></line>
      <line x1="18.36" y1="18.36" x2="19.78" y2="19.78"></line>
      <line x1="1" y1="12" x2="3" y2="12"></line>
      <line x1="21" y1="12" x2="23" y2="12"></line>
      <line x1="4.22" y1="19.78" x2="5.64" y2="18.36"></line>
      <line x1="18.36" y1="5.64" x2="19.78" y2="4.22"></line>
    </svg>
  </symbol>
  <symbol id="svg-moon" viewBox="0 0 24 24">
    <title>Dark mode</title>
    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor"
      stroke-width="1" stroke-linecap="round" stroke-linejoin="round" class="icon-tabler-moon">
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 3c.132 0 .263 0 .393 0a7.5 7.5 0 0 0 7.92 12.446a9 9 0 1 1 -8.313 -12.454z" />
    </svg>
  </symbol>
  <symbol id="svg-sun-with-moon" viewBox="0 0 24 24">
    <title>Auto light/dark, in light mode</title>
    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor"
      stroke-width="1" stroke-linecap="round" stroke-linejoin="round"
      class="icon-custom-derived-from-feather-sun-and-tabler-moon">
      <path style="opacity: 50%" d="M 5.411 14.504 C 5.471 14.504 5.532 14.504 5.591 14.504 C 3.639 16.319 4.383 19.569 6.931 20.352 C 7.693 20.586 8.512 20.551 9.25 20.252 C 8.023 23.207 4.056 23.725 2.11 21.184 C 0.166 18.642 1.702 14.949 4.874 14.536 C 5.051 14.512 5.231 14.5 5.411 14.5 L 5.411 14.504 Z"/>
      <line x1="14.5" y1="3.25" x2="14.5" y2="1.25"/>
      <line x1="14.5" y1="15.85" x2="14.5" y2="17.85"/>
      <line x1="10.044" y1="5.094" x2="8.63" y2="3.68"/>
      <line x1="19" y1="14.05" x2="20.414" y2="15.464"/>
      <line x1="8.2" y1="9.55" x2="6.2" y2="9.55"/>
      <line x1="20.8" y1="9.55" x2="22.8" y2="9.55"/>
      <line x1="10.044" y1="14.006" x2="8.63" y2="15.42"/>
      <line x1="19" y1="5.05" x2="20.414" y2="3.636"/>
      <circle cx="14.5" cy="9.55" r="3.6"/>
    </svg>
  </symbol>
  <symbol id="svg-moon-with-sun" viewBox="0 0 24 24">
    <title>Auto light/dark, in dark mode</title>
    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor"
      stroke-width="1" stroke-linecap="round" stroke-linejoin="round"
      class="icon-custom-derived-from-feather-sun-and-tabler-moon">
      <path d="M 8.282 7.007 C 8.385 7.007 8.494 7.007 8.595 7.007 C 5.18 10.184 6.481 15.869 10.942 17.24 C 12.275 17.648 13.706 17.589 15 17.066 C 12.851 22.236 5.91 23.143 2.505 18.696 C -0.897 14.249 1.791 7.786 7.342 7.063 C 7.652 7.021 7.965 7 8.282 7 L 8.282 7.007 Z"/>
      <line style="opacity: 50%" x1="18" y1="3.705" x2="18" y2="2.5"/>
      <line style="opacity: 50%" x1="18" y1="11.295" x2="18" y2="12.5"/>
      <line style="opacity: 50%" x1="15.316" y1="4.816" x2="14.464" y2="3.964"/>
      <line style="opacity: 50%" x1="20.711" y1="10.212" x2="21.563" y2="11.063"/>
      <line style="opacity: 50%" x1="14.205" y1="7.5" x2="13.001" y2="7.5"/>
      <line style="opacity: 50%" x1="21.795" y1="7.5" x2="23" y2="7.5"/>
      <line style="opacity: 50%" x1="15.316" y1="10.184" x2="14.464" y2="11.036"/>
      <line style="opacity: 50%" x1="20.711" y1="4.789" x2="21.563" y2="3.937"/>
      <circle style="opacity: 50%" cx="18" cy="7.5" r="2.169"/>
    </svg>
  </symbol>
  <symbol id="svg-pencil" viewBox="0 0 24 24">
    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor"
      stroke-width="1" stroke-linecap="round" stroke-linejoin="round" class="icon-tabler-pencil-code">
      <path d="M4 20h4l10.5 -10.5a2.828 2.828 0 1 0 -4 -4l-10.5 10.5v4" />
      <path d="M13.5 6.5l4 4" />
      <path d="M20 21l2 -2l-2 -2" />
      <path d="M17 17l-2 2l2 2" />
    </svg>
  </symbol>
  <symbol id="svg-eye" viewBox="0 0 24 24">
    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor"
      stroke-width="1" stroke-linecap="round" stroke-linejoin="round" class="icon-tabler-eye-code">
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10 12a2 2 0 1 0 4 0a2 2 0 0 0 -4 0" />
      <path
        d="M11.11 17.958c-3.209 -.307 -5.91 -2.293 -8.11 -5.958c2.4 -4 5.4 -6 9 -6c3.6 0 6.6 2 9 6c-.21 .352 -.427 .688 -.647 1.008" />
      <path d="M20 21l2 -2l-2 -2" />
      <path d="M17 17l-2 2l2 2" />
    </svg>
  </symbol>
</svg>

<input type="checkbox" class="sidebar-toggle" name="__navigation" id="__navigation">
<input type="checkbox" class="sidebar-toggle" name="__toc" id="__toc">
<label class="overlay sidebar-overlay" for="__navigation">
  <div class="visually-hidden">Hide navigation sidebar</div>
</label>
<label class="overlay toc-overlay" for="__toc">
  <div class="visually-hidden">Hide table of contents sidebar</div>
</label>

<a class="skip-to-content muted-link" href="#furo-main-content">Skip to content</a>



<div class="page">
  <header class="mobile-header">
    <div class="header-left">
      <label class="nav-overlay-icon" for="__navigation">
        <div class="visually-hidden">Toggle site navigation sidebar</div>
        <i class="icon"><svg><use href="#svg-menu"></use></svg></i>
      </label>
    </div>
    <div class="header-center">
      <a href="../../../../index.html"><div class="brand">Practical Alloy</div></a>
    </div>
    <div class="header-right">
      <div class="theme-toggle-container theme-toggle-header">
        <button class="theme-toggle">
          <div class="visually-hidden">Toggle Light / Dark / Auto color theme</div>
          <svg class="theme-icon-when-auto-light"><use href="#svg-sun-with-moon"></use></svg>
          <svg class="theme-icon-when-auto-dark"><use href="#svg-moon-with-sun"></use></svg>
          <svg class="theme-icon-when-dark"><use href="#svg-moon"></use></svg>
          <svg class="theme-icon-when-light"><use href="#svg-sun"></use></svg>
        </button>
      </div>
      <label class="toc-overlay-icon toc-header-icon" for="__toc">
        <div class="visually-hidden">Toggle table of contents sidebar</div>
        <i class="icon"><svg><use href="#svg-toc"></use></svg></i>
      </label>
    </div>
  </header>
  <aside class="sidebar-drawer">
    <div class="sidebar-container">
      
      <div class="sidebar-sticky"><a class="sidebar-brand" href="../../../../index.html">
  
  
  <span class="sidebar-brand-text">Practical Alloy</span>
  
</a><form class="sidebar-search-container" method="get" action="../../../../search.html" role="search">
  <input class="sidebar-search" placeholder="Search" name="q" aria-label="Search">
  <input type="hidden" name="check_keywords" value="yes">
  <input type="hidden" name="area" value="default">
</form>
<div id="searchbox"></div><div class="sidebar-scroll"><div class="sidebar-tree">
  <p class="caption" role="heading"><span class="caption-text">Preface</span></p>
<ul>
<li class="toctree-l1"><a class="reference internal" href="../../../about-alloy/index.html">About Alloy</a></li>
<li class="toctree-l1"><a class="reference internal" href="../../../about-book/index.html">About this book</a></li>
</ul>
<p class="caption" role="heading"><span class="caption-text">The Basics</span></p>
<ul class="current">
<li class="toctree-l1"><a class="reference internal" href="../../../structural-modeling/index.html">Structural modeling</a></li>
<li class="toctree-l1 has-children"><a class="reference internal" href="../../../structural-topics/index.html">Advanced topics</a><input class="toctree-checkbox" id="toctree-checkbox-1" name="toctree-checkbox-1" role="switch" type="checkbox"/><label for="toctree-checkbox-1"><div class="visually-hidden">Toggle navigation of Advanced topics</div><i class="icon"><svg><use href="#svg-arrow-right"></use></svg></i></label><ul>
<li class="toctree-l2"><a class="reference internal" href="../../../structural-topics/topics/subset-signatures/index.html">Subset signatures</a></li>
<li class="toctree-l2"><a class="reference internal" href="../../../structural-topics/topics/enumerations/index.html">Enumeration signatures</a></li>
<li class="toctree-l2"><a class="reference internal" href="../../../structural-topics/topics/commands/index.html">Commands in detail</a></li>
<li class="toctree-l2"><a class="reference internal" href="../../../structural-topics/topics/visualization/index.html">Visualization customization</a></li>
<li class="toctree-l2"><a class="reference internal" href="../../../structural-topics/topics/nary-relations/index.html">Higher-arity relations</a></li>
<li class="toctree-l2"><a class="reference internal" href="../../../structural-topics/topics/evaluator/index.html">The instance evaluator</a></li>
<li class="toctree-l2"><a class="reference internal" href="../../../structural-topics/topics/bestiary/index.html">Arrow multiplicity constraints</a></li>
<li class="toctree-l2"><a class="reference internal" href="../../../structural-topics/topics/type-system/index.html">Type system</a></li>
<li class="toctree-l2"><a class="reference internal" href="../../../structural-topics/topics/modules/index.html">Module system</a></li>
<li class="toctree-l2"><a class="reference internal" href="../../../structural-topics/topics/ordering/index.html">The predefined <code class="code highlight alloy practicalalloy docutils literal highlight-practicalalloy"><span class="n">ordering</span></code> module</a></li>
<li class="toctree-l2"><a class="reference internal" href="../../../structural-topics/topics/relational-logic/index.html">A relational logic primer</a></li>
<li class="toctree-l2"><a class="reference internal" href="../../../structural-topics/topics/model-finding/index.html">Model finding</a></li>
<li class="toctree-l2"><a class="reference internal" href="../../../structural-topics/topics/testing-instances/index.html">Encoding test instances</a></li>
<li class="toctree-l2"><a class="reference internal" href="../../../structural-topics/topics/recursion/index.html">Handling recursion</a></li>
<li class="toctree-l2"><a class="reference internal" href="../../../structural-topics/topics/integers/index.html">Working with integers</a></li>
<li class="toctree-l2"><a class="reference internal" href="../../../structural-topics/topics/signature-facts/index.html">Signature facts</a></li>
</ul>
</li>
<li class="toctree-l1"><a class="reference internal" href="../../../behavioral-modeling/index.html">Behavioral modeling</a></li>
<li class="toctree-l1 current has-children"><a class="reference internal" href="../../index.html">Advanced topics</a><input checked="" class="toctree-checkbox" id="toctree-checkbox-2" name="toctree-checkbox-2" role="switch" type="checkbox"/><label for="toctree-checkbox-2"><div class="visually-hidden">Toggle navigation of Advanced topics</div><i class="icon"><svg><use href="#svg-arrow-right"></use></svg></i></label><ul class="current">
<li class="toctree-l2"><a class="reference internal" href="../temporal-logic/index.html">A temporal logic primer</a></li>
<li class="toctree-l2"><a class="reference internal" href="../mutable-toplevel-signatures/index.html">Mutable top-level signatures</a></li>
<li class="toctree-l2"><a class="reference internal" href="../pointwise-effects/index.html">Pointwise effects</a></li>
<li class="toctree-l2"><a class="reference internal" href="../macros/index.html">Macros</a></li>
<li class="toctree-l2 current current-page"><a class="current reference internal" href="#">Meta-capabilities</a></li>
<li class="toctree-l2"><a class="reference internal" href="../event-depiction/index.html">An idiom for event depiction</a></li>
<li class="toctree-l2"><a class="reference internal" href="../scenarios/index.html">Encoding trace scenarios</a></li>
<li class="toctree-l2"><a class="reference internal" href="../evaluator/index.html">The trace evaluator</a></li>
<li class="toctree-l2"><a class="reference internal" href="../fairness/index.html">Safety, liveness, and fairness</a></li>
<li class="toctree-l2"><a class="reference internal" href="../inductive-invariants/index.html">Inductive invariants</a></li>
<li class="toctree-l2"><a class="reference internal" href="../sequences/index.html">Sequences</a></li>
</ul>
</li>
</ul>
<p class="caption" role="heading"><span class="caption-text">Applications</span></p>
<ul>
<li class="toctree-l1"><a class="reference internal" href="../../../protocol-design/index.html">Protocol design</a></li>
</ul>
<p class="caption" role="heading"><span class="caption-text">Resources</span></p>
<ul>
<li class="toctree-l1"><a class="reference internal" href="../../../../bibliography.html">Bibliography</a></li>
<li class="toctree-l1"><a class="reference internal" href="../../../../genindex.html">Index</a></li>
</ul>

</div>
</div>

      </div>
      
    </div>
  </aside>
  <div class="main">
    <div class="content">
      <div class="article-container">
        <a href="#" class="back-to-top muted-link">
          <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">
            <path d="M13 20h-2V8l-5.5 5.5-1.42-1.42L12 4.16l7.92 7.92-1.42 1.42L13 8v12z"></path>
          </svg>
          <span>Back to top</span>
        </a>
        <div class="content-icon-container">
          <div class="view-this-page">
  <a class="muted-link" href="../../../../_sources/chapters/behavioral-topics/topics/meta/index.rst.txt" title="View this page">
    <svg><use href="#svg-eye"></use></svg>
    <span class="visually-hidden">View this page</span>
  </a>
</div>
<div class="theme-toggle-container theme-toggle-content">
            <button class="theme-toggle">
              <div class="visually-hidden">Toggle Light / Dark / Auto color theme</div>
              <svg class="theme-icon-when-auto-light"><use href="#svg-sun-with-moon"></use></svg>
              <svg class="theme-icon-when-auto-dark"><use href="#svg-moon-with-sun"></use></svg>
              <svg class="theme-icon-when-dark"><use href="#svg-moon"></use></svg>
              <svg class="theme-icon-when-light"><use href="#svg-sun"></use></svg>
            </button>
          </div>
          <label class="toc-overlay-icon toc-content-icon" for="__toc">
            <div class="visually-hidden">Toggle table of contents sidebar</div>
            <i class="icon"><svg><use href="#svg-toc"></use></svg></i>
          </label>
        </div>
        <article role="main" id="furo-main-content">
          <section id="meta-capabilities">
<span id="meta"></span><h1>Meta-capabilities<a class="headerlink" href="#meta-capabilities" title="Link to this heading">¶</a></h1>
<p>Although it is not a very well known feature, Alloy has some basic
meta-capabilities that allow to manipulate signatures and fields at the
meta-level. This is an advanced feature that can sometimes ease the
encoding of certain constraints and even promote maintainability by avoiding
updating constraints as the model evolves.</p>
<section id="the-alloy-meta-model">
<h2>The Alloy meta-model<a class="headerlink" href="#the-alloy-meta-model" title="Link to this heading">¶</a></h2>
<p id="index-0">Let us get back to the file sharing example from the  <a class="reference internal" href="../../../behavioral-modeling/index.html#behavioral-modeling"><span class="std std-ref">Behavioral modeling</span></a> chapter, but extend its configuration slightly to better exemplify the Alloy’s meta-capabilities. In particular, let us also add some abstract attributes to files, introduce different types of files as (static) extension sub-signatures of <code class="code highlight alloy practicalalloy docutils literal highlight-practicalalloy"><span class="n">File</span></code>, and say that links point to other files. This will result in the following static declarations.</p>
<div class="highlight-practicalalloy notranslate"><div class="highlight"><pre><span></span><span class="kd">sig</span> <span class="nc">Token</span> <span class="o">{}</span>

<span class="kd">sig</span> <span class="nc">Attribute</span> <span class="o">{}</span>

<span class="kd">sig</span> <span class="nc">File</span> <span class="o">{</span>
  <span class="n">attributes</span> <span class="p">:</span> <span class="k">set</span> <span class="n">Attribute</span><span class="p">,</span>
  <span class="k">var </span><span class="n">shared</span> <span class="p">:</span> <span class="k">set</span> <span class="n">Token</span>
<span class="o">}</span>

<span class="kd">sig</span> <span class="nc">Text</span><span class="p">,</span> <span class="nc">Binary</span> <span class="k">extends</span> <span class="nc">File</span> <span class="o">{}</span>

<span class="kd">sig</span> <span class="nc">Link</span> <span class="k">extends</span> <span class="nc">File</span> <span class="o">{</span>
  <span class="n">link</span> <span class="p">:</span> <span class="k">one</span> <span class="n">File</span>
<span class="o">}</span>
</pre></div>
</div>
<p id="index-1">A (simplified version of the) Alloy meta-model comprises the signatures and fields declared in a model, along with some of their properties. The Analyzer actually provides an option to inspect this meta-model through menu option <span class="menuselection">Execute ‣ Show Metamodel</span> (or shortcut <kbd class="kbd compound docutils literal notranslate"><kbd class="kbd docutils literal notranslate">cmd</kbd>-<kbd class="kbd docutils literal notranslate">m</kbd></kbd>). Below is the result for this version of the file sharing model.</p>
<a class="reference internal image-reference" href="../../../../_images/metamodel.png"><img alt="../../../../_images/metamodel.png" class="align-center" src="../../../../_images/metamodel.png" style="width: 600px;" /></a>
<p id="index-2">Top-level signatures and extension signatures are shown as yellow squares, while subset signatures are shown as blue ellipses. The signature hierarchy is shown with black edges for extension (<code class="code highlight alloy practicalalloy docutils literal highlight-practicalalloy"><span class="k">extends</span></code>) and subset (<code class="code highlight alloy practicalalloy docutils literal highlight-practicalalloy"><span class="ow">in</span></code>) signatures. Red edges denote the fields, which in this model are all binary. Mutable elements are drawn with dashed lines.</p>
<p id="index-3">Alloy provides a few meta-signatures that capture these elements of the meta-model. These are all identified by a <code class="code docutils literal notranslate"><span class="pre">$</span></code> suffix. The two essential ones are <code class="code highlight alloy practicalalloy docutils literal highlight-practicalalloy"><span class="n">sig$</span></code> – which contains an atom identifying every signature declared in the model – and <code class="code highlight alloy practicalalloy docutils literal highlight-practicalalloy"><span class="n">field$</span></code> – which contains an atom identifying every field declared in the model. By default, these meta-signatures are not created for every Alloy model to avoid cluttering, but only if any meta-signature is referred in the model. So let us activate the meta-capabilities of Alloy by simply writing the following command, which is trivially true in non-empty models:</p>
<div class="highlight-practicalalloy notranslate"><div class="highlight"><pre><span></span><span class="k">run</span> <span class="n">some_sig</span> <span class="o">{</span>
  <span class="k">some</span> <span class="n">sig$</span>
<span class="o">}</span> <span class="k">for</span> <span class="mi">2</span>
</pre></div>
</div>
<p>Meta-signature <code class="code highlight alloy practicalalloy docutils literal highlight-practicalalloy"><span class="n">sig$</span></code> contains a meta-atom identifying each signature of the
model, so this property is trivially true in our model where there are various
signatures declared. Nonetheless, this activates the meta-capabilities and
introduces meta-signatures in the instance which we can inspect in the
evaluator.</p>
<p id="index-4">Let us open an instance returned by the Analyzer and open the evaluator by
pressing <span class="guilabel">Evaluator</span>. Then let us ask for the value of meta-signature
<code class="code highlight alloy practicalalloy docutils literal highlight-practicalalloy"><span class="n">sig$</span></code>. You’ll get the following set of meta-atoms.</p>
<div class="table-wrapper docutils container">
<table class="docutils align-center">
<tbody>
<tr class="row-odd"><td><p><code class="code highlight alloy practicalalloy docutils literal highlight-practicalalloy"><span class="n">Attribute$</span></code></p></td>
<td><p><code class="code highlight alloy practicalalloy docutils literal highlight-practicalalloy"><span class="n">Binary$</span></code></p></td>
<td><p><code class="code highlight alloy practicalalloy docutils literal highlight-practicalalloy"><span class="n">File$</span></code></p></td>
<td><p><code class="code highlight alloy practicalalloy docutils literal highlight-practicalalloy"><span class="n">Link$</span></code></p></td>
<td><p><code class="code highlight alloy practicalalloy docutils literal highlight-practicalalloy"><span class="n">Text$</span></code></p></td>
<td><p><code class="code highlight alloy practicalalloy docutils literal highlight-practicalalloy"><span class="n">Token$</span></code></p></td>
<td><p><code class="code highlight alloy practicalalloy docutils literal highlight-practicalalloy"><span class="n">trashed$</span></code></p></td>
<td><p><code class="code highlight alloy practicalalloy docutils literal highlight-practicalalloy"><span class="n">uploaded$</span></code></p></td>
</tr>
</tbody>
</table>
</div>
<p>As you can see, there is one meta-atom for each of the signatures declared in the model (also identified by a <code class="code docutils literal notranslate"><span class="pre">$</span></code> suffix), including extension and subset signatures. The value of meta-signature <code class="code highlight alloy practicalalloy docutils literal highlight-practicalalloy"><span class="n">field$</span></code> returns instead the meta-atoms representing the fields for all signatures declared in the model.</p>
<div class="table-wrapper docutils container">
<table class="docutils align-center">
<tbody>
<tr class="row-odd"><td><p><code class="code highlight alloy practicalalloy docutils literal highlight-practicalalloy"><span class="n">File$attributes</span></code></p></td>
<td><p><code class="code highlight alloy practicalalloy docutils literal highlight-practicalalloy"><span class="n">File$shared</span></code></p></td>
<td><p><code class="code highlight alloy practicalalloy docutils literal highlight-practicalalloy"><span class="n">Link$link</span></code></p></td>
</tr>
</tbody>
</table>
</div>
<p>You can refer directly to these meta-atoms in the evaluator, and actually, unlike regular atoms, you can also mention them in directly in the model. (Notice that a signature meta-atom always ends in <code class="code docutils literal notranslate"><span class="pre">$</span></code>, such as <code class="code highlight alloy practicalalloy docutils literal highlight-practicalalloy"><span class="n">File$</span></code>, while the respective regular atoms end with <code class="code docutils literal notranslate"><span class="pre">$</span></code> followed by an identifier, such as <code class="code highlight alloy practicalalloy docutils literal highlight-practicalalloy"><span class="n">File$</span><span class="mi">0</span></code> and <code class="code highlight alloy practicalalloy docutils literal highlight-practicalalloy"><span class="n">File$</span><span class="mi">1</span></code>).  Additionally, Alloy also provides subsets of meta-atoms to distinguish between the static and mutable elements of the model. Namely, meta-subset <code class="code highlight alloy practicalalloy docutils literal highlight-practicalalloy"><span class="n">static$</span></code> returns all static signatures and fields, and meta-subset <code class="code highlight alloy practicalalloy docutils literal highlight-practicalalloy"><span class="n">var$</span></code> all mutable signatures and fields.</p>
<p id="index-5">Each meta-signature has a few meta-fields defined that allow us to navigate over the structure of the model. These are <code class="code highlight alloy practicalalloy docutils literal highlight-practicalalloy"><span class="n">parent</span></code>, to get the parent signature of a sub-signature, <code class="code highlight alloy practicalalloy docutils literal highlight-practicalalloy"><span class="n">fields</span></code>, to get all the fields of a signature, and <code class="code highlight alloy practicalalloy docutils literal highlight-practicalalloy"><span class="n">subfields</span></code>, to get all fields declared by a signature or one of its sub-signatures. Due to the Alloy type system, you won’t be able to call these meta-fields directly on the evaluator since it won’t be able to disambiguate between the instances for each signature. But you can call it for a particular meta-atom, such as <code class="code highlight alloy practicalalloy docutils literal highlight-practicalalloy"><span class="n">File$</span> <span class="o">&lt;:</span> <span class="n">fields</span></code>. In this case, as expected, you’ll get the following tuples.</p>
<div class="table-wrapper docutils container">
<table class="docutils align-center">
<tbody>
<tr class="row-odd"><td><p><code class="code highlight alloy practicalalloy docutils literal highlight-practicalalloy"><span class="o">(</span><span class="n">File$</span><span class="p">,</span><span class="n">File$shared</span><span class="o">)</span></code></p></td>
<td><p><code class="code highlight alloy practicalalloy docutils literal highlight-practicalalloy"><span class="o">(</span><span class="n">File$</span><span class="p">,</span><span class="n">File$attributes</span><span class="o">)</span></code></p></td>
</tr>
</tbody>
</table>
</div>
<p>Finally, and most importantly, a <code class="code highlight alloy practicalalloy docutils literal highlight-practicalalloy"><span class="n">value</span></code> meta-field is provided for each
meta-atom that retrieves its valuation in a particular instance. The figure
below depicts this process for a particular instance resulting from the command
presented above, namely the value of the signature <code class="code highlight alloy practicalalloy docutils literal highlight-practicalalloy"><span class="n">File</span></code> by calling
<code class="code highlight alloy practicalalloy docutils literal highlight-practicalalloy"><span class="n">value</span></code> over the corresponding meta-atom (which is the same as just
calling <code class="code highlight alloy practicalalloy docutils literal highlight-practicalalloy"><span class="n">File</span></code> directly).</p>
<a class="reference external image-reference" href="https://github.com/practicalalloy/models/blob/d7906c088d9e67fd0a1bd6ca194fb40dff5ecd34/behavioral-topics/meta/instance_01/filesharing.als#L92-L102"><img alt="Get the code to generate this instance." class="align-center" src="../../../../_images/evaluator11.png" style="width: 750px;" /></a>
<div class="sd-sphinx-override sd-cards-carousel sd-card-cols-2 docutils">
<div class="sd-card sd-sphinx-override sd-mb-3 sd-shadow-sm sd-card-hover docutils">
<div class="sd-card-header docutils">
<p class="sd-card-text"><svg version="1.1" width="1.0em" height="1.0em" class="sd-octicon sd-octicon-file-badge" viewBox="0 0 16 16" aria-hidden="true"><path d="M2.75 1.5a.25.25 0 00-.25.25v11.5c0 .138.112.25.25.25h3.5a.75.75 0 010 1.5h-3.5A1.75 1.75 0 011 13.25V1.75C1 .784 1.784 0 2.75 0h8a1.75 1.75 0 011.508.862.75.75 0 11-1.289.768.25.25 0 00-.219-.13h-8z"></path><path fill-rule="evenodd" d="M8 7a4 4 0 116.49 3.13l.995 4.973a.75.75 0 01-.991.852l-2.409-.876a.25.25 0 00-.17 0l-2.409.876a.75.75 0 01-.991-.852l.994-4.973A3.993 3.993 0 018 7zm4-2.5a2.5 2.5 0 100 5 2.5 2.5 0 000-5zm0 6.5a4 4 0 001.104-.154l.649 3.243-1.155-.42c-.386-.14-.81-.14-1.196 0l-1.155.42.649-3.243A4 4 0 0012 11z"></path></svg> Alloy model</p>
</div>
<div class="sd-card-body docutils">
<div class="sd-card-title sd-font-weight-bold docutils">
Full model for the section</div>
<p class="sd-card-text">Download and explore the files relevant for the model at this point of the book.</p>
</div>
<a class="sd-stretched-link reference external" href="https://github.com/practicalalloy/models/tree/main/behavioral-topics/meta/the-alloy-meta-model"></a></div>
<div class="sd-card sd-sphinx-override sd-mb-3 sd-shadow-sm sd-card-hover docutils">
<div class="sd-card-header docutils">
<p class="sd-card-text"><svg version="1.1" width="1.0em" height="1.0em" class="sd-octicon sd-octicon-beaker" viewBox="0 0 16 16" aria-hidden="true"><path fill-rule="evenodd" d="M5 5.782V2.5h-.25a.75.75 0 010-1.5h6.5a.75.75 0 010 1.5H11v3.282l3.666 5.76C15.619 13.04 14.543 15 12.767 15H3.233c-1.776 0-2.852-1.96-1.899-3.458L5 5.782zM9.5 2.5h-3V6a.75.75 0 01-.117.403L4.73 9h6.54L9.617 6.403A.75.75 0 019.5 6V2.5zm-6.9 9.847L3.775 10.5h8.45l1.175 1.847a.75.75 0 01-.633 1.153H3.233a.75.75 0 01-.633-1.153z"></path></svg> Further reading</p>
</div>
<div class="sd-card-body docutils">
<div class="sd-card-title sd-font-weight-bold docutils">
The trace evaluator</div>
<p class="sd-card-text">In this section we used the evaluator. Learn in more detail how to use it to inspect traces.</p>
</div>
<a class="sd-stretched-link reference internal" href="../evaluator/index.html#evaluator-trace"><span class="std std-ref"></span></a></div>
</div>
</section>
<section id="specifying-meta-constraints">
<h2>Specifying meta-constraints<a class="headerlink" href="#specifying-meta-constraints" title="Link to this heading">¶</a></h2>
<p>Given the available meta-model, let us now explore how it can be used to
ease the writing of certain (meta-)constraints. For instance, let’s say that we just
want to see scenarios where all signatures of the configuration are not empty.
This can be achieved with the following command.</p>
<div class="highlight-practicalalloy notranslate"><div class="highlight"><pre><span></span><span class="k">run</span> <span class="n">no_empty_config_sigs</span> <span class="o">{</span>
  <span class="k">all</span> <span class="n">s</span> <span class="p">:</span> <span class="n">sig$</span> <span class="o">&amp;</span> <span class="n">static$</span> <span class="o">|</span> <span class="k">some</span> <span class="n">s</span><span class="o">.</span><span class="n">value</span>
<span class="o">}</span>
</pre></div>
</div>
<p>Notice that, for now, we are restricting the signature quantification to those
that are static. This command will have the intended behavior regardless of the
model and the declared signatures, making it resilient to model evolution.</p>
<p>As another example, we may want to see scenarios where the fields of a
particular signature are not empty. As said above, we can refer to specific
meta-atoms in the model, so we could just write the following command.</p>
<div class="highlight-practicalalloy notranslate"><div class="highlight"><pre><span></span><span class="k">run</span> <span class="n">no_empty_file_fields</span> <span class="o">{</span>
  <span class="k">all</span> <span class="n">f</span> <span class="p">:</span> <span class="n">File$</span><span class="o">.</span><span class="n">subfields</span> <span class="o">&amp;</span> <span class="n">static$</span> <span class="o">|</span> <span class="k">some</span> <span class="n">f</span><span class="o">.</span><span class="n">value</span>
<span class="o">}</span>
</pre></div>
</div>
<p>This will only generate instances where there are necessarily some attributes
and links assigned (since we called <code class="code highlight alloy practicalalloy docutils literal highlight-practicalalloy"><span class="n">subfields</span></code> on meta-atom
<code class="code highlight alloy practicalalloy docutils literal highlight-practicalalloy"><span class="n">File$</span></code>, it also retrieves field <code class="code highlight alloy practicalalloy docutils literal highlight-practicalalloy"><span class="n">link</span></code> from links).</p>
<p id="index-6">Perhaps more interesting is using the meta-signatures in the context of behavioral modelling. For instance, it is very often the case that there is a fact in the model restricting all declared mutable signatures and fields to be empty in the first state. That is also the case in the file sharing example. Using meta-signatures, this fact could be trivially written for any model as follows, forcing all mutable elements to be empty in the first state.</p>
<div class="highlight-practicalalloy notranslate"><div class="highlight"><pre><span></span><span class="k">fact</span> <span class="nf">init</span> <span class="o">{</span>
  <span class="c1">// Initially all mutable elements are empty</span>
  <span class="k">all</span> <span class="n">v</span> <span class="p">:</span> <span class="n">var$</span> <span class="o">|</span> <span class="k">no</span> <span class="n">v</span><span class="o">.</span><span class="n">value</span>
<span class="o">}</span>
</pre></div>
</div>
<p id="index-7">This strategy is also useful to write stuttering predicates which are common in
behavioral models, as is the case in the file sharing example. Using
meta-signatures, the stuttering predicate could just be rewritten as follows,
stating that the value of all mutable elements remain unchanged between the
current and the next state.</p>
<div class="highlight-practicalalloy notranslate"><div class="highlight"><pre><span></span><span class="k">pred</span> <span class="nf">stutter</span> <span class="o">{</span>
  <span class="k">all</span> <span class="n">v</span> <span class="p">:</span> <span class="n">var$</span> <span class="o">|</span> <span class="n">v</span><span class="o">.</span><span class="n">value</span> <span class="o">=</span> <span class="n">v</span><span class="o">.</span><span class="n">value</span><span class="o">&#39;</span> <span class="c1">// no effect on anything</span>
<span class="o">}</span>
</pre></div>
</div>
<p id="index-8">A similar strategy could be used to encode frame conditions on event predicates, namely iterating over all mutable fields that are not relevant for the event and force them to remain unchanged. In the file sharing model, we could, for instance, re-encode the <code class="code highlight alloy practicalalloy docutils literal highlight-practicalalloy"><span class="n">upload</span></code> event as follows.</p>
<div class="highlight-practicalalloy notranslate"><div class="highlight"><pre><span></span><span class="k">pred</span> <span class="nf">upload</span> <span class="o">[</span><span class="n">f</span> <span class="p">:</span> <span class="n">File</span><span class="o">]</span> <span class="o">{</span>
  <span class="n">f</span> <span class="ow">not</span> <span class="ow">in</span> <span class="n">uploaded</span>                             <span class="c1">// guard</span>
  <span class="n">uploaded</span><span class="o">&#39;</span> <span class="o">=</span> <span class="n">uploaded</span> <span class="o">+</span> <span class="n">f</span>                      <span class="c1">// effect on uploaded</span>
  <span class="k">all</span> <span class="n">v</span> <span class="p">:</span> <span class="n">var$</span> <span class="o">-</span> <span class="n">uploaded$</span> <span class="o">|</span> <span class="n">v</span><span class="o">.</span><span class="n">value</span> <span class="o">=</span> <span class="n">v</span><span class="o">.</span><span class="n">value</span><span class="o">&#39;</span> <span class="c1">// no effect on anything other than uploaded</span>
<span class="o">}</span>
</pre></div>
</div>
<p>This feature can also be used to quickly specify rich scenarios. For instance, let us say we want to see the minimal traces where every element of the model is used at some point. We can just write the following command, that will guarantee that every mutable element is eventually populated. For the file sharing example, this is a trace with 5 states, where a file is uploaded, shared, downloaded, and then deleted.</p>
<div class="highlight-practicalalloy notranslate"><div class="highlight"><pre><span></span><span class="k">run</span> <span class="n">everything_happens</span> <span class="o">{</span>
  <span class="k">all</span> <span class="n">v</span> <span class="p">:</span> <span class="n">var$</span> <span class="o">|</span> <span class="ow">eventually</span> <span class="k">some</span> <span class="n">v</span><span class="o">.</span><span class="n">value</span>
<span class="o">}</span>
</pre></div>
</div>
<div class="sd-sphinx-override sd-cards-carousel sd-card-cols-2 docutils">
<div class="sd-card sd-sphinx-override sd-mb-3 sd-shadow-sm sd-card-hover docutils">
<div class="sd-card-header docutils">
<p class="sd-card-text"><svg version="1.1" width="1.0em" height="1.0em" class="sd-octicon sd-octicon-file-badge" viewBox="0 0 16 16" aria-hidden="true"><path d="M2.75 1.5a.25.25 0 00-.25.25v11.5c0 .138.112.25.25.25h3.5a.75.75 0 010 1.5h-3.5A1.75 1.75 0 011 13.25V1.75C1 .784 1.784 0 2.75 0h8a1.75 1.75 0 011.508.862.75.75 0 11-1.289.768.25.25 0 00-.219-.13h-8z"></path><path fill-rule="evenodd" d="M8 7a4 4 0 116.49 3.13l.995 4.973a.75.75 0 01-.991.852l-2.409-.876a.25.25 0 00-.17 0l-2.409.876a.75.75 0 01-.991-.852l.994-4.973A3.993 3.993 0 018 7zm4-2.5a2.5 2.5 0 100 5 2.5 2.5 0 000-5zm0 6.5a4 4 0 001.104-.154l.649 3.243-1.155-.42c-.386-.14-.81-.14-1.196 0l-1.155.42.649-3.243A4 4 0 0012 11z"></path></svg> Alloy model</p>
</div>
<div class="sd-card-body docutils">
<div class="sd-card-title sd-font-weight-bold docutils">
Full model for the section</div>
<p class="sd-card-text">Download and explore the files relevant for the model at this point of the book.</p>
</div>
<a class="sd-stretched-link reference external" href="https://github.com/practicalalloy/models/tree/main/behavioral-topics/meta/specifying-meta-constraints"></a></div>
</div>
</section>
</section>

        </article>
      </div>
      <footer>
        
        <div class="related-pages">
          <a class="next-page" href="../event-depiction/index.html">
              <div class="page-info">
                <div class="context">
                  <span>Next</span>
                </div>
                <div class="title">An idiom for event depiction</div>
              </div>
              <svg class="furo-related-icon"><use href="#svg-arrow-right"></use></svg>
            </a>
          <a class="prev-page" href="../macros/index.html">
              <svg class="furo-related-icon"><use href="#svg-arrow-right"></use></svg>
              <div class="page-info">
                <div class="context">
                  <span>Previous</span>
                </div>
                
                <div class="title">Macros</div>
                
              </div>
            </a>
        </div>
        <div class="bottom-of-page">
          <div class="left-details">
            <div class="copyright">
                Copyright &#169; 2021-2025, Alcino Cunha, Nuno Macedo, Julien Brunel, David Chemouil
            </div>
            Made with <a href="https://www.sphinx-doc.org/">Sphinx</a> and <a class="muted-link" href="https://pradyunsg.me">@pradyunsg</a>'s
            
            <a href="https://github.com/pradyunsg/furo">Furo</a>
            <div class="last-updated">
              Last updated on Feb 16, 2025</div>
          </div>
          <div class="right-details">
            
          </div>
        </div>
        
      </footer>
    </div>
    <aside class="toc-drawer">
      
      
      <div class="toc-sticky toc-scroll">
        <div class="toc-title-container">
          <span class="toc-title">
            On this page
          </span>
        </div>
        <div class="toc-tree-container">
          <div class="toc-tree">
            <ul>
<li><a class="reference internal" href="#">Meta-capabilities</a><ul>
<li><a class="reference internal" href="#the-alloy-meta-model">The Alloy meta-model</a></li>
<li><a class="reference internal" href="#specifying-meta-constraints">Specifying meta-constraints</a></li>
</ul>
</li>
</ul>

          </div>
        </div>
      </div>
      
      
    </aside>
  </div>
</div><script src="../../../../_static/documentation_options.js?v=10f1778b"></script>
    <script src="../../../../_static/doctools.js?v=888ff710"></script>
    <script src="../../../../_static/sphinx_highlight.js?v=dc90522c"></script>
    <script src="../../../../_static/scripts/furo.js?v=5fa4622c"></script>
    <script src="../../../../_static/clipboard.min.js?v=66b4909c"></script>
    <script src="../../../../_static/copybutton.js?v=71494f10"></script>
    <script kind="utterances">

    var commentsRunWhenDOMLoaded = cb => {
    if (document.readyState != 'loading') {
        cb()
    } else if (document.addEventListener) {
        document.addEventListener('DOMContentLoaded', cb)
    } else {
        document.attachEvent('onreadystatechange', function() {
        if (document.readyState == 'complete') cb()
        })
    }
}

var addUtterances = () => {
    var script = document.createElement("script");
    script.type = "text/javascript";
    script.src = "https://utteranc.es/client.js";
    script.async = "async";

    script.setAttribute("repo", "practicalalloy/practicalalloy.github.io");
    script.setAttribute("issue-term", "pathname");
    script.setAttribute("theme", "github-light");
    script.setAttribute("label", "💬 comment");
    script.setAttribute("crossorigin", "anonymous");

    sections = document.querySelectorAll("div.section");
    if (sections !== null) {
        section = sections[sections.length-1];
        section.appendChild(script);
    }
}
commentsRunWhenDOMLoaded(addUtterances);
</script>
    <script src="../../../../_static/design-tabs.js?v=70e5c12e"></script>
    </body>
</html>